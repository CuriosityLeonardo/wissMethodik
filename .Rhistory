library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("ggspatial")
world <- ne_countries(scale = "medium", returnclass = "sf")
install.packages("rgeos")
library("rgeos")
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# excerpt
sites <- data.frame(longitude = df$long, latitude = df$lat)
View(df)
df <- read.csv(".../kc_house_data.csv")
View(df)
Inspect(df)
df <- read.csv("kc_house_data.csv")
library("ggplot2")
theme_set(theme_bw())
library("sf")
library("rnaturalearth")
library("rnaturalearthdata")
library("ggspatial")
detach("package:rgeos", unload=TRUE)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# excerpt
sites <- data.frame(longitude = df$long, latitude = df$lat)
# wide view
ggplot(data = world) +
geom_sf(fill= "antiquewhite") +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
geom_point(data = sites, aes(x = longitude, y = latitude), size = 4, shape = 23, fill = "darkred") +
coord_sf(xlim = c(-145.0, 0), ylim = c(0, 90), expand = FALSE)
# zoom in
ggplot(data = world) +
geom_sf(fill= "antiquewhite") +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
geom_point(data = sites, aes(x = longitude, y = latitude), size = 1, shape = 23, fill = "darkred") +
coord_sf(xlim = c(-122.8, -121.5), ylim = c(47.1, 47.8), expand = FALSE)
# Coloring
cond <- df$price <= 321950
df_1st <- df[cond,]
sites_1st <- data.frame(longitude = df_1st$long, latitude = df_1st$lat)
cond <- df$price <= 450000 & df$price > 321950
df_2nd <- df[cond,]
sites_2nd <- data.frame(longitude = df_2nd$long, latitude = df_2nd$lat)
cond <- df$price <= 645000 & df$price > 450000
df_3rd <- df[cond,]
sites_3rd <- data.frame(longitude = df_3rd$long, latitude = df_3rd$lat)
cond <- df$price > 645000
df_4th <- df[cond,]
sites_4th <- data.frame(longitude = df_4th$long, latitude = df_4th$lat)
ggplot(data = world) +
geom_sf(fill= "antiquewhite") +
annotation_scale(location = "bl", width_hint = 0.5) +
annotation_north_arrow(location = "bl", which_north = "true",
pad_x = unit(0.75, "in"), pad_y = unit(0.5, "in"),
style = north_arrow_fancy_orienteering) +
geom_point(data = sites_1st, aes(x = longitude, y = latitude), size = 1, shape = 23, fill = "green") +
geom_point(data = sites_2nd, aes(x = longitude, y = latitude), size = 1, shape = 23, fill = "green") +
geom_point(data = sites_3rd, aes(x = longitude, y = latitude), size = 1, shape = 23, fill = "blue") +
geom_point(data = sites_4th, aes(x = longitude, y = latitude), size = 1, shape = 23, fill = "blue") +
coord_sf(xlim = c(-122.8, -121.5), ylim = c(47.1, 47.8), expand = FALSE)
# remove all objects from workspace
rm(list = ls())
detach("package:moderndive", unload=TRUE)
# Install package moderndive that includes the dataset "house_prices" before adding the library
library(moderndive)
library(mosaic)
# add variables squaremeter to get a more intuitive understanding of the size
house_prices$sqmt_living <- house_prices$sqft_living*0.092903
house_prices$sqmt_living15 <- house_prices$sqft_living15*0.092903
house_prices$sqmt_lot <- house_prices$sqft_lot*0.092903
house_prices$sqmt_lot15 <- house_prices$sqft_lot15*0.092903
house_prices$sqmt_above <- house_prices$sqft_above*0.092903
house_prices$sqmt_basement <- house_prices$sqft_basement*0.092903
# attach the data to address the data in an easier way
attach(house_prices)
# Get a sample of records to look at
head(house_prices,10)
help(house_prices)
count(house_prices)
# Get an overview of the distribution of house prices
mean(price) # arithmetisches Mittel
median(price) # Median
max(price)
min(price)
t <- table(price) # Häufigkeitstabelle
t[which.max(t)] # Modus
summary(price)
# Eine Übersicht der Verteilung der Hauspreise über die Dichtefunktion gewinnen
plot(price)
# Eine Übersicht der Verteilung der Hauspreise über die Dichtefunktion gewinnen
plot(density(price),main="Dichtefunktion: Hauspreise"
# Eine Übersicht der Verteilung der Hauspreise über die Dichtefunktion gewinnen
plot(density(price),main="Dichtefunktion: Hauspreise")
# Eine Übersicht der Verteilung der Hauspreise über die Dichtefunktion gewinnen
plot(density(price), main="Dichtefunktion: Hauspreise")
# Get a sample of records to look at
head(house_prices,10)
t[which.max(t)] # Modus
# looking at the 10 highest and lowest house prices
sort_price <- house_prices[order(price),]
head(sort_price,10)
tail(sort_price,10)
head(sort_price$price,10)
tail(sort_price$price,10)
?abline
abline(a,b)
summary(price)
# Eine Übersicht der Verteilung der Hauspreise über die Dichtefunktion gewinnen
plot(density(price), main="Dichtefunktion: Hauspreise")
# add 1st Quartile
abline(0,0,0,321950)
# add 3rd Quartile
abline(0,0,0,645000)
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000))
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis") # change x axis limit to exclude high outliers from the plot
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at = 0:2000000,labels=c(0,321950,500000,645000,1000000,1500000))
axis(1,at = 1:6,labels=c(0,321950,500000,645000,1000000,1500000))
axis(1,at = 1:2,labels=c(0,1500000))
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at = 1:2,labels=c(0,1500000))
#0,321950,500000,645000,1000000,1500000
?axis
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,labels=c(0,1500000))
axis(1,at=c(0,1500000),labels=c(0,1500000))
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000))
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n",labels = scales::comma) # change x axis limit to exclude high outliers from the plot
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n",labels = scales::comma) # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000))
t[which.max(t)] # Modus
t <- table(price) # Häufigkeitstabelle
t[which.max(t)] # Modus
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000))
?abline
?text
text(321950,"1. Quartil")
text(321950,"1. Quartil")
text(321950,0.0000005,"1. Quartil")
text(350000,0.0000005,"1. Quartil")
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000)) # add custom x Axis Values
text(350000,0.0000005,"1. Quartil")
text(380000,0.0000005,"1. Quartil")
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000)) # add custom x Axis Values
text(380000,0.0000005,"1. Quartil")
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000)) # add custom x Axis Values
text(380000,0.0000005,"- 1. Quartil")
text(720000,0.0000005,"- 3. Quartil")
plot(density(price), main="Dichtefunktion: Hauspreise",xlim=c(0,2000000),xlab="Hauspreis",xaxt="n") # change x axis limit to exclude high outliers from the plot
abline(0,0,0,321950) # add 1st Quartile
abline(0,0,0,645000) # add 3rd Quartile
?abline
axis(1,at=c(0,321950,500000,645000,1000000,1500000),labels=c(0,321950,500000,645000,1000000,1500000)) # add custom x Axis Values
text(380000,0.0000005,"- 1. Quartil")
text(710000,0.0000005,"- 3. Quartil")
# remove all objects from workspace
rm(list = ls())
detach("package:moderndive", unload=TRUE)
# Install package moderndive that includes the dataset "house_prices" before adding the library
library(moderndive)
library(mosaic)
# add variables squaremeter to get a more intuitive understanding of the size
house_prices$sqmt_living <- house_prices$sqft_living*0.092903
house_prices$sqmt_living15 <- house_prices$sqft_living15*0.092903
house_prices$sqmt_lot <- house_prices$sqft_lot*0.092903
house_prices$sqmt_lot15 <- house_prices$sqft_lot15*0.092903
house_prices$sqmt_above <- house_prices$sqft_above*0.092903
house_prices$sqmt_basement <- house_prices$sqft_basement*0.092903
# drop the variables with sqft
house_prices_sqmt <- subset(house_prices, select = -c(house_prices$sqft_living,
house_prices$sqft_living15,
house_prices$sqft_lot,
house_prices$sqft_lot15,
house_prices$sqft_above,
house_prices$sqft_basement))
View(house_prices)
View(house_prices)
last_error()
`rlang::last_error()
